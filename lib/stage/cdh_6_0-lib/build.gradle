description = 'StreamSets Data Collector CDH 6.0 Lib'

def avroVersion = '1.8.2-cdh6.0.0-beta1'
def flumeVersion = '1.8.0-cdh6.0.0-beta1'
def hadoopVersion = '3.0.0-cdh6.0.0-beta1'
def hiveVersion = '2.1.1-cdh6.0.0-beta1'
def hbaseVersion = '2.0.0-cdh6.0.0-beta1'
def kuduVersion = '1.6.0-cdh6.0.0-beta1'
def solrVersion = '7.0.0-cdh6.0.0-beta1'
def sparkVersion = '2.2.0-cdh6.0.0-beta1'
def thriftVersion = '0.9.3'

repositories {
  maven {
    url "http://bits.cloudera.com/f93c6c9d/cdh6/6.0.0-beta1/maven-repository/"
  }
}

dependencies {
  compile project(':lib:proto:kudu-protolib')
  compile group: 'org.apache.kudu', name: 'kudu-client', version: kuduVersion
  compile(group: 'org.apache.hadoop', name: 'hadoop-aws', version: hadoopVersion) {
    exclude group: 'com.fasterxml.jackson.core', module: '*'
    exclude group: 'org.apache.hadoop', module: 'hadoop-common'
  }
  compile(project(':lib:proto:cluster-hdfs-protolib')) {
    exclude group: 'io.netty', module: '*'
    exclude group: 'io.netty', module: 'netty-transport-native-epoll'
    exclude group: 'io.netty', module: 'netty-transport-native-unix-common'
  }
  compile project(':lib:proto:mapreduce-protolib')
  compile "com.streamsets:streamsets-datacollector-spark-api:${project.version}"
  compile project(':lib:proto:spark-processor-protolib')
  compile project(':lib:proto:spark-executor-protolib')
  compile group: 'org.apache.spark', name: 'spark-core_2.11', version: sparkVersion
  compile group: 'org.apache.spark', name: 'spark-launcher_2.11', version: sparkVersion
  compile(group: 'org.apache.avro', name: 'avro-mapred', version: avroVersion, classifier: 'hadoop2') {
    exclude group: 'org.mortbay.jetty', module: 'servlet-api'
  }
  compile(group: 'org.apache.avro', name: 'avro', version: avroVersion)
  compileOnly(project(':core:cluster:cluster-bootstrap-api')) {
    exclude group: 'com.fasterxml.jackson.core', module: '*'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
  }
  compile(project(':lib:proto:hdfs-protolib'))
  compile(project(':lib:proto:hbase-protolib'))
  compile(project(':lib:proto:hive-protolib'))
  runtime(group: 'org.apache.hive', name: 'hive-jdbc', version: hiveVersion) {
    exclude group: 'javax.servlet', module: 'servlet-api'
    exclude group: 'com.codahale.metrics', module: 'metrics-core'
    exclude group: 'com.codahale.metrics', module: 'metrics-json'
    exclude group: 'com.codahale.metrics', module: 'metrics-jvm'
  }
  compile(group: 'org.apache.hive.hcatalog', name: 'hive-hcatalog-streaming', version: hiveVersion) {
    exclude group: 'com.codahale.metrics', module: 'metrics-core'
    exclude group: 'com.codahale.metrics', module: 'metrics-json'
    exclude group: 'com.codahale.metrics', module: 'metrics-jvm'
  }
  compile(group: 'org.apache.hive.hcatalog', name: 'hive-hcatalog-core', version: hiveVersion) {
    exclude group: 'com.codahale.metrics', module: 'metrics-core'
    exclude group: 'com.codahale.metrics', module: 'metrics-json'
    exclude group: 'com.codahale.metrics', module: 'metrics-jvm'
    exclude group: 'org.codehaus.jettison', module: 'jettison'
    exclude group: 'javax.servlet', module: 'servlet-api'
  }
  compile(group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoopVersion)
  testCompile(group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoopVersion) {
    exclude group: 'javax.servlet', module: 'servlet-api'
  }
  compile(group: 'org.apache.hbase', name: 'hbase-client', version: hbaseVersion) {
    exclude group: 'com.github.stephenc.findbugs', module: 'findbugs-annotations'
  }
  testCompile(group: 'org.apache.hbase', name: 'hbase-testing-util', version: hbaseVersion) {
    exclude group: 'javax.servlet', module: 'servlet-api'
  }
  compile "org.apache.solr:solr-solrj:${solrVersion}"
  testCompile "org.apache.solr:solr-test-framework:${solrVersion}"
  compile project(':core:sdc-solr-api')
  testCompile project(path: ':core:sdc-solr-api', configuration: 'testArtifacts')

  compile(project(':lib:stage:sdc-solr_cdh_4')) {
    exclude group: 'org.apache.solr', module: 'solr-solrj'
  }
  testCompile project(path: ':lib:stage:sdc-solr_cdh_4', configuration: 'testArtifacts')
  compile(project(':lib:proto:solr-protolib')) {
    exclude group: 'org.apache.solr', module: 'solr-solrj'
  }
  testCompile project(path: ':lib:proto:solr-protolib', configuration: 'testArtifacts')

  testCompile "org.powermock:powermock-module-junit4"
  testCompile "org.powermock:powermock-api-mockito"

  compile(project(':lib:proto:flume-protolib')) {
    exclude group: 'org.apache.flume', module: 'flume-ng-sdk'
  }
  compile(group: 'org.apache.thrift', name: 'libthrift', version: thriftVersion) {
    exclude group: 'org.apache.httpcomponents', module: 'httpcore'
  }

  compile group: 'org.apache.flume', name: 'flume-ng-sdk', version: flumeVersion
  testCompile(group: 'org.apache.flume', name: 'flume-ng-core', version: flumeVersion) {
    exclude group: 'org.mortbay.jetty', module: 'servlet-api'
  }

  compile 'javax.servlet:javax.servlet-api:3.1.0'

  testCompile(group: 'org.apache.flume', name: 'flume-ng-configuration', version: flumeVersion)

  testCompile project(path: ':lib:stagesupport', configuration: 'testArtifacts')
  testCompile(project(path: ':lib:commonlib', configuration: 'testArtifacts')) {
    exclude group: 'io.netty', module: '*'
    exclude group: 'io.netty', module: 'netty-transport-native-epoll'
    exclude group: 'io.netty', module: 'netty-transport-native-unix-common'
  }
  testCompile project(path: ':lib:proto:dir-spooler-protolib', configuration: 'testArtifacts')
  testCompile project(path: ':lib:proto:hdfs-protolib', configuration: 'testArtifacts')

  // Ensure Avro to ORC tests run with the CDH library
  avroToOrcTestCompile("org.apache.hadoop:hadoop-common:${hadoopVersion}")
  avroToOrcCompile("org.apache.hadoop:hadoop-client:${hadoopVersion}")
}

sourceSets {
  test {
    java {
      srcDir project(':lib:proto:solr-protolib').sourceSets.test.java.srcDirs
    }
    resources {
      srcDir project(':lib:proto:solr-protolib').sourceSets.test.resources.srcDirs
    }
  }
}
